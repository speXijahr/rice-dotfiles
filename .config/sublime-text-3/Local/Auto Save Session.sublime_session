{
	"folder_history":
	[
	],
	"last_version": 3176,
	"last_window_id": 1,
	"log_indexing": false,
	"settings":
	{
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"split",
						"splitext\tfunction"
					],
					[
						"get",
						"getPath"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/home/devocean/Codes/pythonPlayground.py",
					"settings":
					{
						"buffer_size": 361,
						"encoding": "UTF-8",
						"line_ending": "Unix",
						"name": "print \"Hello world!\""
					}
				},
				{
					"contents": "Future house\nJackin House\nDeep house\nFunky Breaks - Proppelerheads",
					"settings":
					{
						"buffer_size": 66,
						"line_ending": "Unix",
						"name": "Future house"
					}
				},
				{
					"contents": "notes\n\nMethod One: A view from above##\n\n'You can rid yourself of many useless things among those that disturb you, for they lie entirely in your imagination; and you will then gain for yourself ample space by comprehending the whole universe in your mind, and by contemplating the eternity of time, and observing the rapid change of every part of everything, how short is the time from birth to dissolution, and the illimitable time before birth as well as the equally boundless time after dissolution'\n\nMethod Two: Negative visualization##\n\n'Remember that all we have is “on loan” from Fortune, which can reclaim it without our permission—indeed, without even advance notice. Thus, we should love all our dear ones, but always with the thought that we have no promise that we may keep them forever—nay, no promise even that we may keep them for long.'\n\n- Seneca\n\nNegative visualization despite the name is an exercise that will increase your default level of happiness if practised consistently.The exercise consists of you envisioning what it would feel like if you lost certain things from your life. Some of the things that you could consider during the exercise are:\n\n• How it would feel to not have a roof over your head.\n\n• How it would feel to lose social status.\n\n• How it would feel to live in a third world country.\n\n• How it would feel to have a physical disability.\n\n• How it would feel to lose a loved one.\n\nMethod Three - Seek discomfort\n\nVorso\nKeeno\nCulture Shock\n\n\nTree Traversal\nRecursion - Fibonnaci and Tree Traversal into iterative\nSorting\nWorking with strings",
					"settings":
					{
						"buffer_size": 1581,
						"line_ending": "Unix",
						"name": "notes"
					}
				},
				{
					"file": "/home/devocean/.config/i3/config",
					"settings":
					{
						"buffer_size": 5560,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/devocean/Scripts/youtubePlaylist.txt",
					"settings":
					{
						"buffer_size": 75,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/devocean/Scripts/light.sh",
					"settings":
					{
						"buffer_size": 27,
						"encoding": "UTF-8",
						"line_ending": "Unix",
						"name": "redshift -l 50.3165:14.6167"
					}
				},
				{
					"file": "/home/devocean/.xinitrc",
					"settings":
					{
						"buffer_size": 22,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"contents": "youtube-dl --extract-audio --audio-format mp3 -i -o \"%(title)s.%(ext)s\" $1\n",
					"settings":
					{
						"buffer_size": 75,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"Package Control: ins",
						"Package Control: Install Package"
					],
					[
						"Package Control: add",
						"Package Control: Add Channel"
					],
					[
						"Package Control: ",
						"Package Control: Discover Packages"
					],
					[
						"Package Contrpak",
						"Package Control: List Packages"
					]
				],
				"width": 0.0
			},
			"console":
			{
				"height": 125.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
					" import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
					"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
					" import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
					" import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
					" import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
					" import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
					"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/devocean/Scripts/light.sh",
				"/home/devocean/youtube.sh",
				"/home/devocean/.config/polybar/config",
				"/home/devocean/.config/mpd/mpd.conf",
				"/home/devocean/.config/i3/config",
				"/home/devocean/.Xdefaults",
				"/home/devocean/Videos/T2.Trainspotting.2017.1080p.WEB.DL.HEVC.2CH.x265.srt",
				"/tmp/mozilla_devocean0/promoce-srpen-rozpis.rtf",
				"/home/devocean/youtubePlaylist.sh",
				"/home/devocean/.Xauthority",
				"/home/devocean/.xinitrc",
				"/home/devocean/.config/sublime-text-3/Packages/Anaconda/Anaconda.sublime-settings",
				"/home/devocean/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
				"/home/devocean/.config/ranger/rifle.conf",
				"/home/devocean/.config/.ncmpcpp/bindings",
				"/home/devocean/.config/.ncmpcpp/config",
				"/home/devocean/Documents/temata.txt",
				"/home/devocean/.config/i3/config-new",
				"/home/devocean/EDITOR"
			],
			"find":
			{
				"height": 22.977022977
			},
			"find_in_files":
			{
				"height": 0.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"i3"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 6,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/devocean/Codes/pythonPlayground.py",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 361,
								"regions":
								{
								},
								"selection":
								[
									[
										360,
										360
									]
								],
								"settings":
								{
									"auto_complete_triggers":
									[
										{
											"characters": ".",
											"selector": "source.python - string - comment - constant.numeric"
										},
										{
											"characters": ".",
											"selector": "source.python - string - constant.numeric"
										}
									],
									"auto_name": "print \"Hello world!\"",
									"syntax": "Packages/Python/Python.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 7,
							"type": "text"
						},
						{
							"buffer": 1,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 66,
								"regions":
								{
								},
								"selection":
								[
									[
										66,
										66
									]
								],
								"settings":
								{
									"auto_name": "Future house",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 6,
							"type": "text"
						},
						{
							"buffer": 2,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1581,
								"regions":
								{
								},
								"selection":
								[
									[
										1479,
										1479
									]
								],
								"settings":
								{
									"auto_name": "notes",
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 3,
							"type": "text"
						},
						{
							"buffer": 3,
							"file": "/home/devocean/.config/i3/config",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5560,
								"regions":
								{
								},
								"selection":
								[
									[
										2833,
										2833
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 1156.84315684,
								"zoom_level": 1.0
							},
							"stack_index": 5,
							"type": "text"
						},
						{
							"buffer": 4,
							"file": "/home/devocean/Scripts/youtubePlaylist.txt",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 75,
								"regions":
								{
								},
								"selection":
								[
									[
										75,
										75
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 5,
							"file": "/home/devocean/Scripts/light.sh",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 27,
								"regions":
								{
								},
								"selection":
								[
									[
										27,
										27
									]
								],
								"settings":
								{
									"auto_name": "redshift -l 50.3165:14.6167",
									"syntax": "Packages/ShellScript/Bash.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 6,
							"file": "/home/devocean/.xinitrc",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 22,
								"regions":
								{
								},
								"selection":
								[
									[
										22,
										22
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Bash.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 7,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 75,
								"regions":
								{
								},
								"selection":
								[
									[
										48,
										48
									]
								],
								"settings":
								{
									"syntax": "Packages/ShellScript/Bash.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 4,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 22.977022977
			},
			"input":
			{
				"height": 35.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,40,64,1324,726,1366,768",
			"project": "",
			"replace":
			{
				"height": 41.958041958
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 150.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 1,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
